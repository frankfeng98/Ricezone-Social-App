{"ast":null,"code":"import{store,persistor}from'./store';import React from'react';import ReactDOM from'react-dom/client';import'./index.css';import{Provider}from\"react-redux\";import{BrowserRouter as Router,Link,Route,Routes}from'react-router-dom';import LandingPage from\"./components/LandingPage\";import Profile from'./components/ProfilePage/Profile';import LogInPage from'./components/LogInPage';import{fetchUsers,fetchPosts}from'./reducers';import MainPage from'./components/MainPage/MainPage';import{PersistGate}from'redux-persist/integration/react';import Protected from'./components/ProtectedRoutes';import reportWebVitals from'./reportWebVitals';import HandleGoogle from'./components/HandleGoogle';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var root=ReactDOM.createRoot(document.getElementById('root'));store.dispatch(fetchUsers);store.dispatch(fetchPosts);//Todo make sure user cannot access protected page before logging in\nroot.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(PersistGate,{loading:null,persistor:persistor,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(LandingPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(LogInPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/handleGoogle\",element:/*#__PURE__*/_jsx(HandleGoogle,{})}),/*#__PURE__*/_jsxs(Route,{element:/*#__PURE__*/_jsx(Protected,{}),children:[/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(Profile,{})}),/*#__PURE__*/_jsx(Route,{path:\"/main\",element:/*#__PURE__*/_jsx(MainPage,{})})]})]})})})})}));// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["store","persistor","React","ReactDOM","Provider","BrowserRouter","Router","Link","Route","Routes","LandingPage","Profile","LogInPage","fetchUsers","fetchPosts","MainPage","PersistGate","Protected","reportWebVitals","HandleGoogle","root","createRoot","document","getElementById","dispatch","render"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw7/final-frontend-frankfeng98/ricezone/src/index.js"],"sourcesContent":["import {store, persistor} from './store'\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Route, Routes } from 'react-router-dom';\nimport LandingPage from \"./components/LandingPage\";\nimport Profile from './components/ProfilePage/Profile';\nimport LogInPage from './components/LogInPage';\nimport { fetchUsers, fetchPosts } from './reducers';\nimport MainPage from './components/MainPage/MainPage';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Protected from './components/ProtectedRoutes';\nimport reportWebVitals from './reportWebVitals';\nimport HandleGoogle from './components/HandleGoogle';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nstore.dispatch(fetchUsers)\nstore.dispatch(fetchPosts)\n\n//Todo make sure user cannot access protected page before logging in\nroot.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router>\n          <Routes>\n            <Route exact path={\"/\"} element={<LandingPage />} />\n            <Route path={\"/login\"} element={<LogInPage/>} />\n            <Route path={\"/handleGoogle\"} element={<HandleGoogle/>} />\n            <Route element={<Protected/>}>\n              <Route path={\"/profile\"} element={<Profile />} />\n              <Route path={\"/main\"} element={<MainPage/>} />\n            </Route>\n          </Routes>\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":"AAAA,OAAQA,KAAK,CAAEC,SAAS,KAAO,SAAS,CACxC,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAOC,SAAQ,KAAM,kBAAkB,CACvC,MAAO,aAAa,CACpB,OAASC,QAAQ,KAAQ,aAAa,CACtC,OAASC,aAAa,GAAIC,OAAM,CAAEC,IAAI,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAC/E,MAAOC,YAAW,KAAM,0BAA0B,CAClD,MAAOC,QAAO,KAAM,kCAAkC,CACtD,MAAOC,UAAS,KAAM,wBAAwB,CAC9C,OAASC,UAAU,CAAEC,UAAU,KAAQ,YAAY,CACnD,MAAOC,SAAQ,KAAM,gCAAgC,CACrD,OAASC,WAAW,KAAQ,iCAAiC,CAC7D,MAAOC,UAAS,KAAM,8BAA8B,CACpD,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,MAAOC,aAAY,KAAM,2BAA2B,CAAC,wFAErD,GAAMC,KAAI,CAAGjB,QAAQ,CAACkB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEvB,KAAK,CAACwB,QAAQ,CAACX,UAAU,CAAC,CAC1Bb,KAAK,CAACwB,QAAQ,CAACV,UAAU,CAAC,CAE1B;AACAM,IAAI,CAACK,MAAM,cACT,KAAC,KAAK,CAAC,UAAU,wBACf,KAAC,QAAQ,EAAC,KAAK,CAAIzB,KAAM,uBACvB,KAAC,WAAW,EAAC,OAAO,CAAE,IAAK,CAAC,SAAS,CAAEC,SAAU,uBAC/C,KAAC,MAAM,wBACL,MAAC,MAAM,yBACL,KAAC,KAAK,EAAC,KAAK,MAAC,IAAI,CAAE,GAAI,CAAC,OAAO,cAAE,KAAC,WAAW,IAAI,EAAG,cACpD,KAAC,KAAK,EAAC,IAAI,CAAE,QAAS,CAAC,OAAO,cAAE,KAAC,SAAS,IAAG,EAAG,cAChD,KAAC,KAAK,EAAC,IAAI,CAAE,eAAgB,CAAC,OAAO,cAAE,KAAC,YAAY,IAAG,EAAG,cAC1D,MAAC,KAAK,EAAC,OAAO,cAAE,KAAC,SAAS,IAAG,wBAC3B,KAAC,KAAK,EAAC,IAAI,CAAE,UAAW,CAAC,OAAO,cAAE,KAAC,OAAO,IAAI,EAAG,cACjD,KAAC,KAAK,EAAC,IAAI,CAAE,OAAQ,CAAC,OAAO,cAAE,KAAC,QAAQ,IAAG,EAAG,GACxC,GACD,EACF,EACG,EACL,EACM,CACpB,CAED;AACA;AACA;AACAiB,eAAe,EAAE"},"metadata":{},"sourceType":"module"}