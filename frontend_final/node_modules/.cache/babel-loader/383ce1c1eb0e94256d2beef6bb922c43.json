{"ast":null,"code":"var _jsxFileName = \"/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw4-frankfeng98/ricezone/src/components/LogIn.jsx\";\nimport React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogIn = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    children: [\"initialValues=\", {\n      accountName: '',\n      password: ''\n    }, \"validationSchema=\", Yup.object({\n      accountName: Yup.string().required(\"Required\"),\n      password: Yup.string().required(\"Password required\")\n    }), /*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 block\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col mb-2 block px-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password1\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password1\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = LogIn;\nexport default LogIn;\nvar _c;\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"names":["React","Formik","Field","Form","ErrorMessage","Yup","LogIn","accountName","password","object","string","required"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw4-frankfeng98/ricezone/src/components/LogIn.jsx"],"sourcesContent":["import React from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst LogIn = () => {\n  return (\n    <Formik>\n        initialValues={{ accountName: '', password: ''}}\n        validationSchema={Yup.object({\n            accountName: Yup.string().required(\"Required\"),\n            password: Yup.string().required(\"Password required\")\n        })\n        }\n        <Form>\n        <div className=\"mb-2 block\">\n          <div className='flex flex-col mb-2 block px-5'> \n            <label htmlFor=\"password1\">Password</label>\n            <Field name=\"password1\" type=\"password\" />\n            <ErrorMessage name=\"password1\" />\n          </div>\n        </div>  \n        </Form>\n    </Formik>\n  )\n}\n\nexport default LogIn"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAE3B,MAAMC,KAAK,GAAG,MAAM;EAClB,oBACE,QAAC,MAAM;IAAA,6BACY;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAC,uBAC7BH,GAAG,CAACI,MAAM,CAAC;MACzBF,WAAW,EAAEF,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;MAC9CH,QAAQ,EAAEH,GAAG,CAACK,MAAM,EAAE,CAACC,QAAQ,CAAC,mBAAmB;IACvD,CAAC,CAAC,eAEF,QAAC,IAAI;MAAA,uBACL;QAAK,SAAS,EAAC,YAAY;QAAA,uBACzB;UAAK,SAAS,EAAC,+BAA+B;UAAA,wBAC5C;YAAO,OAAO,EAAC,WAAW;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAiB,eAC3C,QAAC,KAAK;YAAC,IAAI,EAAC,WAAW;YAAC,IAAI,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAG,eAC1C,QAAC,YAAY;YAAC,IAAI,EAAC;UAAW;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAC7B;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEb,CAAC;AAAA,KApBKL,KAAK;AAsBX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}