{"ast":null,"code":"import * as Yup from 'yup';\nexport const validation = Yup.object({\n  accountName: Yup.string().test(\"Account-validation\", \"Account can only contain number and letters and may not start with number\", function (value) {\n    if (/^\\d/.test(account)) {\n      return false;\n    }\n\n    //make sure only letters and nums can be accepted and that at least one letter is required\n    if (/^(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/.test(account)) {\n      return true;\n    } else {\n      return false;\n    }\n  }).required('Required'),\n  displayName: Yup.string().required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  phone: Yup.string().matches(/[0-9]{3}-[0-9]{3}-[0-9]{4}/, \"Phone number is format 000-000-0000\").required('Required'),\n  dob: Yup.date().test(\"is18\", \"You must be 18 to regsiter\", function (value) {\n    let date = new Date(value);\n    const date18YearsAgo = new Date();\n    date18YearsAgo.setFullYear(date18YearsAgo.getFullYear() - 18);\n    return date <= date18YearsAgo;\n  }).required(\"Required\"),\n  zipcode: Yup.string().matches(/^\\d{5}$/, \"Zipcode must be 5 digit\").required(\"Required\"),\n  password1: Yup.string().required('Password is required'),\n  password2: Yup.string().oneOf([Yup.ref('password1'), null], 'Passwords must match').required(\"Password is required\")\n});","map":{"version":3,"names":["Yup","validation","object","accountName","string","test","value","account","required","displayName","email","phone","matches","dob","date","Date","date18YearsAgo","setFullYear","getFullYear","zipcode","password1","password2","oneOf","ref"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw4-frankfeng98/ricezone/src/components/validation.js"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const validation = Yup.object({\n    accountName: Yup.string()\n      .test(\n        \"Account-validation\",\n        \"Account can only contain number and letters and may not start with number\",\n        function (value) {\n            if (/^\\d/.test(account)){\n                return false;\n            }\n\n            //make sure only letters and nums can be accepted and that at least one letter is required\n            if (/^(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/.test(account)){\n                return true;\n            } else {\n                return false;\n            }\n        }\n      )\n      .required('Required'),\n    displayName: Yup.string()\n      .required('Required'),\n    email: Yup.string().email('Invalid email address').required('Required'),\n    phone: Yup.string().matches(/[0-9]{3}-[0-9]{3}-[0-9]{4}/, \"Phone number is format 000-000-0000\").required('Required'),\n    dob: Yup.date().test(\n        \"is18\",\n        \"You must be 18 to regsiter\",\n        function (value) {\n            let date = new Date(value);\n            const date18YearsAgo = new Date();\n            date18YearsAgo.setFullYear(date18YearsAgo.getFullYear() - 18);\n            return date <=date18YearsAgo;\n        }\n    ).required(\"Required\"),\n    zipcode: Yup.string().matches(/^\\d{5}$/, \"Zipcode must be 5 digit\").required(\"Required\"),\n    password1: Yup.string().required('Password is required'),\n    password2: Yup.string()\n     .oneOf([Yup.ref('password1'), null], 'Passwords must match').required(\"Password is required\")\n  })"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,UAAU,GAAGD,GAAG,CAACE,MAAM,CAAC;EACjCC,WAAW,EAAEH,GAAG,CAACI,MAAM,EAAE,CACtBC,IAAI,CACH,oBAAoB,EACpB,2EAA2E,EAC3E,UAAUC,KAAK,EAAE;IACb,IAAI,KAAK,CAACD,IAAI,CAACE,OAAO,CAAC,EAAC;MACpB,OAAO,KAAK;IAChB;;IAEA;IACA,IAAI,8BAA8B,CAACF,IAAI,CAACE,OAAO,CAAC,EAAC;MAC7C,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EACJ,CAAC,CACF,CACAC,QAAQ,CAAC,UAAU,CAAC;EACvBC,WAAW,EAAET,GAAG,CAACI,MAAM,EAAE,CACtBI,QAAQ,CAAC,UAAU,CAAC;EACvBE,KAAK,EAAEV,GAAG,CAACI,MAAM,EAAE,CAACM,KAAK,CAAC,uBAAuB,CAAC,CAACF,QAAQ,CAAC,UAAU,CAAC;EACvEG,KAAK,EAAEX,GAAG,CAACI,MAAM,EAAE,CAACQ,OAAO,CAAC,4BAA4B,EAAE,qCAAqC,CAAC,CAACJ,QAAQ,CAAC,UAAU,CAAC;EACrHK,GAAG,EAAEb,GAAG,CAACc,IAAI,EAAE,CAACT,IAAI,CAChB,MAAM,EACN,4BAA4B,EAC5B,UAAUC,KAAK,EAAE;IACb,IAAIQ,IAAI,GAAG,IAAIC,IAAI,CAACT,KAAK,CAAC;IAC1B,MAAMU,cAAc,GAAG,IAAID,IAAI,EAAE;IACjCC,cAAc,CAACC,WAAW,CAACD,cAAc,CAACE,WAAW,EAAE,GAAG,EAAE,CAAC;IAC7D,OAAOJ,IAAI,IAAGE,cAAc;EAChC,CAAC,CACJ,CAACR,QAAQ,CAAC,UAAU,CAAC;EACtBW,OAAO,EAAEnB,GAAG,CAACI,MAAM,EAAE,CAACQ,OAAO,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAACJ,QAAQ,CAAC,UAAU,CAAC;EACxFY,SAAS,EAAEpB,GAAG,CAACI,MAAM,EAAE,CAACI,QAAQ,CAAC,sBAAsB,CAAC;EACxDa,SAAS,EAAErB,GAAG,CAACI,MAAM,EAAE,CACrBkB,KAAK,CAAC,CAACtB,GAAG,CAACuB,GAAG,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,EAAE,sBAAsB,CAAC,CAACf,QAAQ,CAAC,sBAAsB;AAC/F,CAAC,CAAC"},"metadata":{},"sourceType":"module"}