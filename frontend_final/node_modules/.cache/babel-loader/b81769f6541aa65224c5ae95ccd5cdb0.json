{"ast":null,"code":"import _classCallCheck from \"/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw5-frankfeng98/ricezone/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw5-frankfeng98/ricezone/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport has from 'lodash/has';\nimport isSchema from './util/isSchema';\nvar Condition = /*#__PURE__*/function () {\n  function Condition(refs, options) {\n    _classCallCheck(this, Condition);\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n    if (typeof options === 'function') {\n      this.fn = options;\n      return;\n    }\n    if (!has(options, 'is')) throw new TypeError('`is:` is required for `when()` conditions');\n    if (!options.then && !options.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    var is = options.is,\n      then = options.then,\n      otherwise = options.otherwise;\n    var check = typeof is === 'function' ? is : function () {\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n      return values.every(function (value) {\n        return value === is;\n      });\n    };\n    this.fn = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      var options = args.pop();\n      var schema = args.pop();\n      var branch = check.apply(void 0, args) ? then : otherwise;\n      if (!branch) return undefined;\n      if (typeof branch === 'function') return branch(schema);\n      return schema.concat(branch.resolve(options));\n    };\n  }\n  _createClass(Condition, [{\n    key: \"resolve\",\n    value: function resolve(base, options) {\n      var values = this.refs.map(function (ref) {\n        return ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context);\n      });\n      var schema = this.fn.apply(base, values.concat(base, options));\n      if (schema === undefined || schema === base) return base;\n      if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n      return schema.resolve(options);\n    }\n  }]);\n  return Condition;\n}();\nexport default Condition;","map":{"version":3,"names":["has","isSchema","Condition","refs","options","fn","TypeError","then","otherwise","is","check","values","every","value","args","pop","schema","branch","undefined","concat","resolve","base","map","ref","getValue","parent","context","apply"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw5-frankfeng98/ricezone/node_modules/yup/es/Condition.js"],"sourcesContent":["import has from 'lodash/has';\nimport isSchema from './util/isSchema';\n\nclass Condition {\n  constructor(refs, options) {\n    this.fn = void 0;\n    this.refs = refs;\n    this.refs = refs;\n\n    if (typeof options === 'function') {\n      this.fn = options;\n      return;\n    }\n\n    if (!has(options, 'is')) throw new TypeError('`is:` is required for `when()` conditions');\n    if (!options.then && !options.otherwise) throw new TypeError('either `then:` or `otherwise:` is required for `when()` conditions');\n    let {\n      is,\n      then,\n      otherwise\n    } = options;\n    let check = typeof is === 'function' ? is : (...values) => values.every(value => value === is);\n\n    this.fn = function (...args) {\n      let options = args.pop();\n      let schema = args.pop();\n      let branch = check(...args) ? then : otherwise;\n      if (!branch) return undefined;\n      if (typeof branch === 'function') return branch(schema);\n      return schema.concat(branch.resolve(options));\n    };\n  }\n\n  resolve(base, options) {\n    let values = this.refs.map(ref => ref.getValue(options == null ? void 0 : options.value, options == null ? void 0 : options.parent, options == null ? void 0 : options.context));\n    let schema = this.fn.apply(base, values.concat(base, options));\n    if (schema === undefined || schema === base) return base;\n    if (!isSchema(schema)) throw new TypeError('conditions must return a schema object');\n    return schema.resolve(options);\n  }\n\n}\n\nexport default Condition;"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,YAAY;AAC5B,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,IAEjCC,SAAS;EACb,mBAAYC,IAAI,EAAEC,OAAO,EAAE;IAAA;IACzB,IAAI,CAACC,EAAE,GAAG,KAAK,CAAC;IAChB,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAEhB,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE;MACjC,IAAI,CAACC,EAAE,GAAGD,OAAO;MACjB;IACF;IAEA,IAAI,CAACJ,GAAG,CAACI,OAAO,EAAE,IAAI,CAAC,EAAE,MAAM,IAAIE,SAAS,CAAC,2CAA2C,CAAC;IACzF,IAAI,CAACF,OAAO,CAACG,IAAI,IAAI,CAACH,OAAO,CAACI,SAAS,EAAE,MAAM,IAAIF,SAAS,CAAC,oEAAoE,CAAC;IAClI,IACEG,EAAE,GAGAL,OAAO,CAHTK,EAAE;MACFF,IAAI,GAEFH,OAAO,CAFTG,IAAI;MACJC,SAAS,GACPJ,OAAO,CADTI,SAAS;IAEX,IAAIE,KAAK,GAAG,OAAOD,EAAE,KAAK,UAAU,GAAGA,EAAE,GAAG;MAAA,kCAAIE,MAAM;QAANA,MAAM;MAAA;MAAA,OAAKA,MAAM,CAACC,KAAK,CAAC,UAAAC,KAAK;QAAA,OAAIA,KAAK,KAAKJ,EAAE;MAAA,EAAC;IAAA;IAE9F,IAAI,CAACJ,EAAE,GAAG,YAAmB;MAAA,mCAANS,IAAI;QAAJA,IAAI;MAAA;MACzB,IAAIV,OAAO,GAAGU,IAAI,CAACC,GAAG,EAAE;MACxB,IAAIC,MAAM,GAAGF,IAAI,CAACC,GAAG,EAAE;MACvB,IAAIE,MAAM,GAAGP,KAAK,eAAII,IAAI,CAAC,GAAGP,IAAI,GAAGC,SAAS;MAC9C,IAAI,CAACS,MAAM,EAAE,OAAOC,SAAS;MAC7B,IAAI,OAAOD,MAAM,KAAK,UAAU,EAAE,OAAOA,MAAM,CAACD,MAAM,CAAC;MACvD,OAAOA,MAAM,CAACG,MAAM,CAACF,MAAM,CAACG,OAAO,CAAChB,OAAO,CAAC,CAAC;IAC/C,CAAC;EACH;EAAC;IAAA;IAAA,OAED,iBAAQiB,IAAI,EAAEjB,OAAO,EAAE;MACrB,IAAIO,MAAM,GAAG,IAAI,CAACR,IAAI,CAACmB,GAAG,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,QAAQ,CAACpB,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACS,KAAK,EAAET,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACqB,MAAM,EAAErB,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACsB,OAAO,CAAC;MAAA,EAAC;MAChL,IAAIV,MAAM,GAAG,IAAI,CAACX,EAAE,CAACsB,KAAK,CAACN,IAAI,EAAEV,MAAM,CAACQ,MAAM,CAACE,IAAI,EAAEjB,OAAO,CAAC,CAAC;MAC9D,IAAIY,MAAM,KAAKE,SAAS,IAAIF,MAAM,KAAKK,IAAI,EAAE,OAAOA,IAAI;MACxD,IAAI,CAACpB,QAAQ,CAACe,MAAM,CAAC,EAAE,MAAM,IAAIV,SAAS,CAAC,wCAAwC,CAAC;MACpF,OAAOU,MAAM,CAACI,OAAO,CAAChB,OAAO,CAAC;IAChC;EAAC;EAAA;AAAA;AAIH,eAAeF,SAAS"},"metadata":{},"sourceType":"module"}