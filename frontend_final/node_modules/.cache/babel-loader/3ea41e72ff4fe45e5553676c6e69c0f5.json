{"ast":null,"code":"import*as Yup from'yup';export var validation_profile=Yup.object({username:Yup.string().test(\"Account-validation\",\"Account can only contain number and letters and may not start with number\",function(value){if(/^\\d/.test(value)){return false;}//make sure only letters and nums can be accepted and that at least one letter is required\nif(/^(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/.test(value)){return true;}else{return false;}}),email:Yup.string().email('Invalid email address'),phone:Yup.string().matches(/[0-9]{3}-[0-9]{3}-[0-9]{4}/,\"Phone number is format 000-000-0000\"),zipcode:Yup.string().matches(/^\\d{5}$/,\"Zipcode must be 5 digit\"),password1:Yup.string(),password2:Yup.string().oneOf([Yup.ref('password1'),null],'Passwords must match')});","map":{"version":3,"names":["Yup","validation_profile","object","username","string","test","value","email","phone","matches","zipcode","password1","password2","oneOf","ref"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw4-frankfeng98/ricezone/src/components/ProfilePage/profile_validation.js"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const validation_profile = Yup.object({\n    username: Yup.string()\n      .test(\n        \"Account-validation\",\n        \"Account can only contain number and letters and may not start with number\",\n        function (value) {\n            if (/^\\d/.test(value)){\n                return false;\n            }\n            //make sure only letters and nums can be accepted and that at least one letter is required\n            if (/^(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/.test(value)){\n                return true;\n            } else {\n                return false;\n            }\n        }\n      ),\n    email: Yup.string().email('Invalid email address'),\n    phone: Yup.string().matches(/[0-9]{3}-[0-9]{3}-[0-9]{4}/, \"Phone number is format 000-000-0000\"),\n    zipcode: Yup.string().matches(/^\\d{5}$/, \"Zipcode must be 5 digit\"),\n    password1: Yup.string(),\n    password2: Yup.string()\n     .oneOf([Yup.ref('password1'), null], 'Passwords must match')\n  })"],"mappings":"AAAA,MAAO,GAAKA,IAAG,KAAM,KAAK,CAE1B,MAAO,IAAMC,mBAAkB,CAAGD,GAAG,CAACE,MAAM,CAAC,CACzCC,QAAQ,CAAEH,GAAG,CAACI,MAAM,EAAE,CACnBC,IAAI,CACH,oBAAoB,CACpB,2EAA2E,CAC3E,SAAUC,KAAK,CAAE,CACb,GAAI,KAAK,CAACD,IAAI,CAACC,KAAK,CAAC,CAAC,CAClB,MAAO,MAAK,CAChB,CACA;AACA,GAAI,8BAA8B,CAACD,IAAI,CAACC,KAAK,CAAC,CAAC,CAC3C,MAAO,KAAI,CACf,CAAC,IAAM,CACH,MAAO,MAAK,CAChB,CACJ,CAAC,CACF,CACHC,KAAK,CAAEP,GAAG,CAACI,MAAM,EAAE,CAACG,KAAK,CAAC,uBAAuB,CAAC,CAClDC,KAAK,CAAER,GAAG,CAACI,MAAM,EAAE,CAACK,OAAO,CAAC,4BAA4B,CAAE,qCAAqC,CAAC,CAChGC,OAAO,CAAEV,GAAG,CAACI,MAAM,EAAE,CAACK,OAAO,CAAC,SAAS,CAAE,yBAAyB,CAAC,CACnEE,SAAS,CAAEX,GAAG,CAACI,MAAM,EAAE,CACvBQ,SAAS,CAAEZ,GAAG,CAACI,MAAM,EAAE,CACrBS,KAAK,CAAC,CAACb,GAAG,CAACc,GAAG,CAAC,WAAW,CAAC,CAAE,IAAI,CAAC,CAAE,sBAAsB,CAC9D,CAAC,CAAC"},"metadata":{},"sourceType":"module"}