{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport windowExists from '../../helpers/window-exists';\nimport defaultTheme from '../../theme/default';\nimport { ThemeContext, useThemeMode } from './ThemeContext';\nexport const Flowbite = _ref => {\n  let {\n    children,\n    theme = {}\n  } = _ref;\n  const {\n    theme: customTheme = {},\n    dark,\n    usePreferences = true\n  } = theme;\n  const [mode, setMode, toggleMode] = useThemeMode(usePreferences);\n  const mergedTheme = mergeDeep(defaultTheme, customTheme);\n  useEffect(() => {\n    if (dark) {\n      if (setMode != null) {\n        setMode('dark');\n      }\n      if (windowExists()) {\n        document.documentElement.classList.add('dark');\n      }\n    }\n  }, [dark, setMode]);\n  const themeContextValue = useMemo(() => ({\n    theme: mergedTheme,\n    mode,\n    toggleMode\n  }), [mode, toggleMode, mergedTheme]);\n  return _jsx(ThemeContext.Provider, {\n    value: themeContextValue,\n    children: children\n  });\n};","map":{"version":3,"names":["jsx","_jsx","useEffect","useMemo","mergeDeep","windowExists","defaultTheme","ThemeContext","useThemeMode","Flowbite","children","theme","customTheme","dark","usePreferences","mode","setMode","toggleMode","mergedTheme","document","documentElement","classList","add","themeContextValue","Provider","value"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw4-frankfeng98/ricezone/node_modules/flowbite-react/lib/esm/components/Flowbite/index.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo } from 'react';\nimport { mergeDeep } from '../../helpers/mergeDeep';\nimport windowExists from '../../helpers/window-exists';\nimport defaultTheme from '../../theme/default';\nimport { ThemeContext, useThemeMode } from './ThemeContext';\nexport const Flowbite = ({ children, theme = {} }) => {\n    const { theme: customTheme = {}, dark, usePreferences = true } = theme;\n    const [mode, setMode, toggleMode] = useThemeMode(usePreferences);\n    const mergedTheme = mergeDeep(defaultTheme, customTheme);\n    useEffect(() => {\n        if (dark) {\n            if (setMode != null) {\n                setMode('dark');\n            }\n            if (windowExists()) {\n                document.documentElement.classList.add('dark');\n            }\n        }\n    }, [dark, setMode]);\n    const themeContextValue = useMemo(() => ({\n        theme: mergedTheme,\n        mode,\n        toggleMode,\n    }), [mode, toggleMode, mergedTheme]);\n    return _jsx(ThemeContext.Provider, { value: themeContextValue, children: children });\n};\n"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1C,SAASC,SAAS,QAAQ,yBAAyB;AACnD,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,SAASC,YAAY,EAAEC,YAAY,QAAQ,gBAAgB;AAC3D,OAAO,MAAMC,QAAQ,GAAG,QAA8B;EAAA,IAA7B;IAAEC,QAAQ;IAAEC,KAAK,GAAG,CAAC;EAAE,CAAC;EAC7C,MAAM;IAAEA,KAAK,EAAEC,WAAW,GAAG,CAAC,CAAC;IAAEC,IAAI;IAAEC,cAAc,GAAG;EAAK,CAAC,GAAGH,KAAK;EACtE,MAAM,CAACI,IAAI,EAAEC,OAAO,EAAEC,UAAU,CAAC,GAAGT,YAAY,CAACM,cAAc,CAAC;EAChE,MAAMI,WAAW,GAAGd,SAAS,CAACE,YAAY,EAAEM,WAAW,CAAC;EACxDV,SAAS,CAAC,MAAM;IACZ,IAAIW,IAAI,EAAE;MACN,IAAIG,OAAO,IAAI,IAAI,EAAE;QACjBA,OAAO,CAAC,MAAM,CAAC;MACnB;MACA,IAAIX,YAAY,EAAE,EAAE;QAChBc,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAClD;IACJ;EACJ,CAAC,EAAE,CAACT,IAAI,EAAEG,OAAO,CAAC,CAAC;EACnB,MAAMO,iBAAiB,GAAGpB,OAAO,CAAC,OAAO;IACrCQ,KAAK,EAAEO,WAAW;IAClBH,IAAI;IACJE;EACJ,CAAC,CAAC,EAAE,CAACF,IAAI,EAAEE,UAAU,EAAEC,WAAW,CAAC,CAAC;EACpC,OAAOjB,IAAI,CAACM,YAAY,CAACiB,QAAQ,EAAE;IAAEC,KAAK,EAAEF,iBAAiB;IAAEb,QAAQ,EAAEA;EAAS,CAAC,CAAC;AACxF,CAAC"},"metadata":{},"sourceType":"module"}