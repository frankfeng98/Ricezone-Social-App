{"ast":null,"code":"var reactProperty = require('react-property');\nvar utilities = require('./utilities');\n\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param {object} [attributes={}] - HTML/SVG DOM attributes.\n * @returns - React props.\n */\nmodule.exports = function attributesToProps(attributes) {\n  attributes = attributes || {};\n  var valueOnlyInputs = {\n    reset: true,\n    submit: true\n  };\n  var attributeName;\n  var attributeNameLowerCased;\n  var attributeValue;\n  var propName;\n  var propertyInfo;\n  var props = {};\n  var inputIsValueOnly = attributes.type && valueOnlyInputs[attributes.type];\n  for (attributeName in attributes) {\n    attributeValue = attributes[attributeName];\n\n    // ARIA (aria-*) or custom data (data-*) attribute\n    if (reactProperty.isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    }\n\n    // convert HTML/SVG attribute to React prop\n    attributeNameLowerCased = attributeName.toLowerCase();\n    propName = getPropName(attributeNameLowerCased);\n    if (propName) {\n      propertyInfo = reactProperty.getPropertyInfo(propName);\n\n      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\n      // https://reactjs.org/docs/uncontrolled-components.html\n      if ((propName === 'checked' || propName === 'value') && !inputIsValueOnly) {\n        propName = getPropName('default' + attributeNameLowerCased);\n      }\n      props[propName] = attributeValue;\n      switch (propertyInfo && propertyInfo.type) {\n        case reactProperty.BOOLEAN:\n          props[propName] = true;\n          break;\n        case reactProperty.OVERLOADED_BOOLEAN:\n          if (attributeValue === '') {\n            props[propName] = true;\n          }\n          break;\n      }\n      continue;\n    }\n\n    // preserve custom attribute if React >=16\n    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  }\n\n  // transform inline style to object\n  utilities.setStyleProp(attributes.style, props);\n  return props;\n};\n\n/**\n * Gets prop name from lowercased attribute name.\n *\n * @param {string} attributeName - Lowercased attribute name.\n * @returns - Prop name.\n */\nfunction getPropName(attributeName) {\n  return reactProperty.possibleStandardNames[attributeName];\n}","map":{"version":3,"names":["reactProperty","require","utilities","module","exports","attributesToProps","attributes","valueOnlyInputs","reset","submit","attributeName","attributeNameLowerCased","attributeValue","propName","propertyInfo","props","inputIsValueOnly","type","isCustomAttribute","toLowerCase","getPropName","getPropertyInfo","BOOLEAN","OVERLOADED_BOOLEAN","PRESERVE_CUSTOM_ATTRIBUTES","setStyleProp","style","possibleStandardNames"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw7/final-frontend-frankfeng98/ricezone/node_modules/html-react-parser/lib/attributes-to-props.js"],"sourcesContent":["var reactProperty = require('react-property');\nvar utilities = require('./utilities');\n\n/**\n * Converts HTML/SVG DOM attributes to React props.\n *\n * @param {object} [attributes={}] - HTML/SVG DOM attributes.\n * @returns - React props.\n */\nmodule.exports = function attributesToProps(attributes) {\n  attributes = attributes || {};\n\n  var valueOnlyInputs = {\n    reset: true,\n    submit: true\n  };\n\n  var attributeName;\n  var attributeNameLowerCased;\n  var attributeValue;\n  var propName;\n  var propertyInfo;\n  var props = {};\n  var inputIsValueOnly = attributes.type && valueOnlyInputs[attributes.type];\n\n  for (attributeName in attributes) {\n    attributeValue = attributes[attributeName];\n\n    // ARIA (aria-*) or custom data (data-*) attribute\n    if (reactProperty.isCustomAttribute(attributeName)) {\n      props[attributeName] = attributeValue;\n      continue;\n    }\n\n    // convert HTML/SVG attribute to React prop\n    attributeNameLowerCased = attributeName.toLowerCase();\n    propName = getPropName(attributeNameLowerCased);\n\n    if (propName) {\n      propertyInfo = reactProperty.getPropertyInfo(propName);\n\n      // convert attribute to uncontrolled component prop (e.g., `value` to `defaultValue`)\n      // https://reactjs.org/docs/uncontrolled-components.html\n      if (\n        (propName === 'checked' || propName === 'value') &&\n        !inputIsValueOnly\n      ) {\n        propName = getPropName('default' + attributeNameLowerCased);\n      }\n\n      props[propName] = attributeValue;\n\n      switch (propertyInfo && propertyInfo.type) {\n        case reactProperty.BOOLEAN:\n          props[propName] = true;\n          break;\n        case reactProperty.OVERLOADED_BOOLEAN:\n          if (attributeValue === '') {\n            props[propName] = true;\n          }\n          break;\n      }\n      continue;\n    }\n\n    // preserve custom attribute if React >=16\n    if (utilities.PRESERVE_CUSTOM_ATTRIBUTES) {\n      props[attributeName] = attributeValue;\n    }\n  }\n\n  // transform inline style to object\n  utilities.setStyleProp(attributes.style, props);\n\n  return props;\n};\n\n/**\n * Gets prop name from lowercased attribute name.\n *\n * @param {string} attributeName - Lowercased attribute name.\n * @returns - Prop name.\n */\nfunction getPropName(attributeName) {\n  return reactProperty.possibleStandardNames[attributeName];\n}\n"],"mappings":"AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC7C,IAAIC,SAAS,GAAGD,OAAO,CAAC,aAAa,CAAC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,iBAAiB,CAACC,UAAU,EAAE;EACtDA,UAAU,GAAGA,UAAU,IAAI,CAAC,CAAC;EAE7B,IAAIC,eAAe,GAAG;IACpBC,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE;EACV,CAAC;EAED,IAAIC,aAAa;EACjB,IAAIC,uBAAuB;EAC3B,IAAIC,cAAc;EAClB,IAAIC,QAAQ;EACZ,IAAIC,YAAY;EAChB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,gBAAgB,GAAGV,UAAU,CAACW,IAAI,IAAIV,eAAe,CAACD,UAAU,CAACW,IAAI,CAAC;EAE1E,KAAKP,aAAa,IAAIJ,UAAU,EAAE;IAChCM,cAAc,GAAGN,UAAU,CAACI,aAAa,CAAC;;IAE1C;IACA,IAAIV,aAAa,CAACkB,iBAAiB,CAACR,aAAa,CAAC,EAAE;MAClDK,KAAK,CAACL,aAAa,CAAC,GAAGE,cAAc;MACrC;IACF;;IAEA;IACAD,uBAAuB,GAAGD,aAAa,CAACS,WAAW,EAAE;IACrDN,QAAQ,GAAGO,WAAW,CAACT,uBAAuB,CAAC;IAE/C,IAAIE,QAAQ,EAAE;MACZC,YAAY,GAAGd,aAAa,CAACqB,eAAe,CAACR,QAAQ,CAAC;;MAEtD;MACA;MACA,IACE,CAACA,QAAQ,KAAK,SAAS,IAAIA,QAAQ,KAAK,OAAO,KAC/C,CAACG,gBAAgB,EACjB;QACAH,QAAQ,GAAGO,WAAW,CAAC,SAAS,GAAGT,uBAAuB,CAAC;MAC7D;MAEAI,KAAK,CAACF,QAAQ,CAAC,GAAGD,cAAc;MAEhC,QAAQE,YAAY,IAAIA,YAAY,CAACG,IAAI;QACvC,KAAKjB,aAAa,CAACsB,OAAO;UACxBP,KAAK,CAACF,QAAQ,CAAC,GAAG,IAAI;UACtB;QACF,KAAKb,aAAa,CAACuB,kBAAkB;UACnC,IAAIX,cAAc,KAAK,EAAE,EAAE;YACzBG,KAAK,CAACF,QAAQ,CAAC,GAAG,IAAI;UACxB;UACA;MAAM;MAEV;IACF;;IAEA;IACA,IAAIX,SAAS,CAACsB,0BAA0B,EAAE;MACxCT,KAAK,CAACL,aAAa,CAAC,GAAGE,cAAc;IACvC;EACF;;EAEA;EACAV,SAAS,CAACuB,YAAY,CAACnB,UAAU,CAACoB,KAAK,EAAEX,KAAK,CAAC;EAE/C,OAAOA,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,WAAW,CAACV,aAAa,EAAE;EAClC,OAAOV,aAAa,CAAC2B,qBAAqB,CAACjB,aAAa,CAAC;AAC3D"},"metadata":{},"sourceType":"script"}