{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { loadUsers } from \"./actions\";\nconst initialState = {\n  userList: [],\n  userValidated: false\n};\nconst riceZoneApp = createReducer([], builder => {\n  builder.addCase('usersLoaded', (state, action) => {\n    return {\n      ...state,\n      userList: [...action.payload],\n      userValidated: false\n    };\n  }).addCase('usersAdded', (state, action) => {\n    let userList = [...state.userList];\n    userList.push(action.payload);\n    return {\n      ...state,\n      userList: userList\n    };\n  }).addCase('usersValidated', (state, action) => {\n    let logIn = action.payload;\n    state.userList.forEach(user => {\n      console.log(user.username);\n      console.log(logIn.username);\n      if (user.username === logIn.username) {\n        console.log(user.password1);\n        console.log(logIn.password);\n        if (user.password1 == logIn.password) {\n          console.log(user.password1 == logIn.password);\n          state.userValidated = true;\n        }\n      }\n    });\n  }).addCase('resetValidate', (state, action) => {\n    state.userValidated = !state.userValidated;\n  }).addDefaultCase((state, action) => {\n    return state;\n  });\n});\nexport async function fetchUsers(dispatch, getState) {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await response.json();\n  dispatch(loadUsers(data));\n}\nexport default {\n  riceZoneApp\n};","map":{"version":3,"names":["createReducer","loadUsers","initialState","userList","userValidated","riceZoneApp","builder","addCase","state","action","payload","push","logIn","forEach","user","console","log","username","password1","password","addDefaultCase","fetchUsers","dispatch","getState","response","fetch","data","json"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw4-frankfeng98/ricezone/src/reducers.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\"\nimport { loadUsers } from \"./actions\"\n\nconst initialState = {\n    userList: [],\n    userValidated: false\n}\n\nconst riceZoneApp = createReducer([], (builder) => {\n    builder\n        .addCase('usersLoaded', (state, action) => {\n            return {\n                ...state,\n                userList: [...action.payload],\n                userValidated: false\n            }\n        })\n        .addCase('usersAdded', (state, action) => {\n            let userList = [...state.userList];\n            userList.push(action.payload);\n            return {\n                ...state,\n                userList: userList\n            }\n        })\n        .addCase('usersValidated', (state, action) => {\n            let logIn = action.payload;\n            state.userList.forEach(user => {\n                console.log(user.username);\n                console.log(logIn.username);\n                if (user.username === logIn.username) {\n                    console.log(user.password1);\n                    console.log(logIn.password);\n                    if (user.password1 == logIn.password) {\n                        console.log(user.password1 == logIn.password)\n                        state.userValidated = true;\n                    }\n                }\n            });\n        })\n        .addCase('resetValidate', (state, action) => {\n            state.userValidated = !state.userValidated;\n        })\n        .addDefaultCase((state, action) => {\n            return state;\n        })\n})\n\nexport async function fetchUsers(dispatch, getState) {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await response.json();\n    dispatch(loadUsers(data));\n}\n\nexport default {riceZoneApp} ;"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,SAAS,QAAQ,WAAW;AAErC,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,WAAW,GAAGL,aAAa,CAAC,EAAE,EAAGM,OAAO,IAAK;EAC/CA,OAAO,CACFC,OAAO,CAAC,aAAa,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACvC,OAAO;MACH,GAAGD,KAAK;MACRL,QAAQ,EAAE,CAAC,GAAGM,MAAM,CAACC,OAAO,CAAC;MAC7BN,aAAa,EAAE;IACnB,CAAC;EACL,CAAC,CAAC,CACDG,OAAO,CAAC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACtC,IAAIN,QAAQ,GAAG,CAAC,GAAGK,KAAK,CAACL,QAAQ,CAAC;IAClCA,QAAQ,CAACQ,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAC7B,OAAO;MACH,GAAGF,KAAK;MACRL,QAAQ,EAAEA;IACd,CAAC;EACL,CAAC,CAAC,CACDI,OAAO,CAAC,gBAAgB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC1C,IAAIG,KAAK,GAAGH,MAAM,CAACC,OAAO;IAC1BF,KAAK,CAACL,QAAQ,CAACU,OAAO,CAACC,IAAI,IAAI;MAC3BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,QAAQ,CAAC;MAC1BF,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACK,QAAQ,CAAC;MAC3B,IAAIH,IAAI,CAACG,QAAQ,KAAKL,KAAK,CAACK,QAAQ,EAAE;QAClCF,OAAO,CAACC,GAAG,CAACF,IAAI,CAACI,SAAS,CAAC;QAC3BH,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACO,QAAQ,CAAC;QAC3B,IAAIL,IAAI,CAACI,SAAS,IAAIN,KAAK,CAACO,QAAQ,EAAE;UAClCJ,OAAO,CAACC,GAAG,CAACF,IAAI,CAACI,SAAS,IAAIN,KAAK,CAACO,QAAQ,CAAC;UAC7CX,KAAK,CAACJ,aAAa,GAAG,IAAI;QAC9B;MACJ;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,CACDG,OAAO,CAAC,eAAe,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;IACzCD,KAAK,CAACJ,aAAa,GAAG,CAACI,KAAK,CAACJ,aAAa;EAC9C,CAAC,CAAC,CACDgB,cAAc,CAAC,CAACZ,KAAK,EAAEC,MAAM,KAAK;IAC/B,OAAOD,KAAK;EAChB,CAAC,CAAC;AACV,CAAC,CAAC;AAEF,OAAO,eAAea,UAAU,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EACjD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;EAC1E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClCL,QAAQ,CAACrB,SAAS,CAACyB,IAAI,CAAC,CAAC;AAC7B;AAEA,eAAe;EAACrB;AAAW,CAAC"},"metadata":{},"sourceType":"module"}