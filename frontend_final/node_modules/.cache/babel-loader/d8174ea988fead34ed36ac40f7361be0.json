{"ast":null,"code":"import { createReducer, current } from \"@reduxjs/toolkit\";\nimport { loadUsers, loadPosts, USERS_LOADED, USERS_ADDED, VALIDATE_USERS, RESET_VALIDATE, POSTS_LOADED, GET_POSTS, FITER_POSTS, ADD_POSTS, FETCH_FOLLOWERS, REMOVE_FOLLOWERS, ADD_FOLLOWERS, UPDATE_HEADLINE } from \"./actions\";\nconst initialState = {\n  userList: [],\n  userValidated: false,\n  postList: [],\n  currentPost: [],\n  displayPost: [],\n  postNum: 0,\n  userNum: 0,\n  currentUserID: '',\n  currentUser: '',\n  currentUserState: '',\n  timeStamp: '',\n  defaultHeadLine: 'I have nothing to say',\n  userHeadline: 'hello world',\n  followerList: [],\n  followerReference: [{\n    'userId': 1,\n    'following': [2, 3, 4]\n  }, {\n    'userId': 2,\n    'following': [3, 4, 5]\n  }, {\n    'userId': 3,\n    'following': [4, 5, 6]\n  }, {\n    'userId': 4,\n    'following': [5, 6, 7]\n  }, {\n    'userId': 5,\n    'following': [6, 7, 8]\n  }, {\n    'userId': 6,\n    'following': [7, 8, 9]\n  }, {\n    'userId': 7,\n    'following': [8, 9, 10]\n  }, {\n    'userId': 8,\n    'following': [9, 10, 1]\n  }, {\n    'userId': 9,\n    'following': [10, 1, 2]\n  }, {\n    'userId': 10,\n    'following': [1, 2, 3]\n  }]\n};\nexport function riceZoneApp() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    // update the rice zone state\n    case USERS_LOADED:\n      let date = new Date();\n      return {\n        ...state,\n        userNum: action.payload.length,\n        userList: [...action.payload],\n        timeStamp: date.toLocaleString()\n      };\n    case USERS_ADDED:\n      let userList = [...state.userList];\n      let payload = action.payload;\n      let num = state.userNum;\n      num++;\n      payload['id'] = state.userNum + 1;\n      userList.push(payload);\n      return {\n        ...state,\n        userList: userList,\n        userNum: num,\n        currentUserID: num\n      };\n    case VALIDATE_USERS:\n      let logIn = action.payload;\n      let result = false;\n      let userID;\n      let userName;\n      state.userList.forEach(user => {\n        if (user.username === logIn.username) {\n          if (user.password1) {\n            if (user.password1 == logIn.password) {\n              result = true;\n              userID = user.id;\n              userName = user.username;\n            }\n          } else {\n            if (user.address.street == logIn.password) {\n              result = true;\n              userID = user.id;\n              userName = user.username;\n            }\n          }\n        }\n      });\n      return {\n        ...state,\n        usersValidated: result,\n        currentUserID: userID,\n        currentUser: userName\n      };\n    case RESET_VALIDATE:\n      return {\n        ...state,\n        usersValidated: false\n      };\n    case POSTS_LOADED:\n      return {\n        ...state,\n        postList: [...action.payload],\n        postNum: action.payload.length\n      };\n    case GET_POSTS:\n      let posts = [...state.postList];\n      let currentPosts = [];\n      posts.forEach(post => {\n        if (post.userId === action.payload) {\n          currentPosts.push(post);\n        }\n      });\n      return {\n        ...state,\n        currentPost: [...currentPosts],\n        displayPost: [...currentPosts]\n      };\n    case FITER_POSTS:\n      let filterPosts = [...state.currentPost];\n      let query = action.payload;\n      let displayPosts = [];\n      if (query === '') {\n        displayPosts = filterPosts;\n      } else {\n        filterPosts.forEach(post => {\n          if (post.title.toLowerCase().includes(query.toLowerCase()) || post.body.toLowerCase().includes(query.toLowerCase())) {\n            displayPosts.push(post);\n          }\n        });\n      }\n      return {\n        ...state,\n        displayPost: displayPosts\n      };\n    case ADD_POSTS:\n      let originalPosts = [...state.currentPost];\n      let postToBeAdd = action.payload;\n      let currentPostNum = state.postNum;\n      currentPostNum++;\n      postToBeAdd['id'] = currentPostNum;\n      originalPosts.unshift(postToBeAdd);\n      return {\n        ...state,\n        postNum: currentPostNum,\n        currentPost: originalPosts,\n        displayPost: originalPosts\n      };\n    case FETCH_FOLLOWERS:\n      let followerData = [...state.followerReference];\n      let followerName = [];\n      followerData.forEach(user => {\n        if (user.userId === action.payload) {\n          followerName = user.following.map((post, index) => {\n            let username = '';\n            state.userList.forEach(user => {\n              if (user.id === post) {\n                username = user.username;\n              }\n            });\n            return username;\n          });\n        }\n      });\n      return {\n        ...state,\n        followerList: [...followerName]\n      };\n    case REMOVE_FOLLOWERS:\n      let currentFollower = [...state.followerList];\n      let filteredFollower = currentFollower.filter(follower => {\n        return follower !== action.payload.username;\n      });\n      return {\n        ...state,\n        followerList: [...filteredFollower]\n      };\n    case ADD_FOLLOWERS:\n      let currentFollowerList = [...state.followerList];\n      currentFollowerList.push(action.payload.follower);\n      console.log(currentFollowerList);\n      return {\n        ...state,\n        followerList: [...currentFollowerList]\n      };\n    case UPDATE_HEADLINE:\n      return {\n        ...state,\n        userHeadline: action.payload.headline\n      };\n    default:\n      return state;\n  }\n}\nexport async function fetchUsers(dispatch, getState) {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n  const data = await response.json();\n  dispatch(loadUsers(data));\n}\nexport async function fetchPosts(dispatch, getState) {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  const data = await response.json();\n  dispatch(loadPosts(data));\n}\nexport default {\n  riceZoneApp\n};","map":{"version":3,"names":["createReducer","current","loadUsers","loadPosts","USERS_LOADED","USERS_ADDED","VALIDATE_USERS","RESET_VALIDATE","POSTS_LOADED","GET_POSTS","FITER_POSTS","ADD_POSTS","FETCH_FOLLOWERS","REMOVE_FOLLOWERS","ADD_FOLLOWERS","UPDATE_HEADLINE","initialState","userList","userValidated","postList","currentPost","displayPost","postNum","userNum","currentUserID","currentUser","currentUserState","timeStamp","defaultHeadLine","userHeadline","followerList","followerReference","riceZoneApp","state","action","type","date","Date","payload","length","toLocaleString","num","push","logIn","result","userID","userName","forEach","user","username","password1","password","id","address","street","usersValidated","posts","currentPosts","post","userId","filterPosts","query","displayPosts","title","toLowerCase","includes","body","originalPosts","postToBeAdd","currentPostNum","unshift","followerData","followerName","following","map","index","currentFollower","filteredFollower","filter","follower","currentFollowerList","console","log","headline","fetchUsers","dispatch","getState","response","fetch","data","json","fetchPosts"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw4-frankfeng98/ricezone/src/reducers.js"],"sourcesContent":["import { createReducer, current } from \"@reduxjs/toolkit\"\nimport { loadUsers, loadPosts, USERS_LOADED, USERS_ADDED, VALIDATE_USERS, RESET_VALIDATE, POSTS_LOADED, GET_POSTS, FITER_POSTS, ADD_POSTS, FETCH_FOLLOWERS, REMOVE_FOLLOWERS, ADD_FOLLOWERS, UPDATE_HEADLINE } from \"./actions\"\n\nconst initialState = {\n    userList: [],\n    userValidated: false,\n    postList: [],\n    currentPost: [],\n    displayPost: [],\n    postNum: 0,\n    userNum: 0,\n    currentUserID: '',\n    currentUser: '',\n    currentUserState: '',\n    timeStamp: '',\n    defaultHeadLine: 'I have nothing to say',\n    userHeadline: 'hello world',\n    followerList: [],\n    followerReference: [\n        {'userId': 1, 'following': [2, 3, 4]},\n        {'userId': 2, 'following': [3, 4, 5]},\n        {'userId': 3, 'following': [4, 5, 6]},\n        {'userId': 4, 'following': [5, 6, 7]},\n        {'userId': 5, 'following': [6, 7, 8]},\n        {'userId': 6, 'following': [7, 8, 9]},\n        {'userId': 7, 'following': [8, 9, 10]},\n        {'userId': 8, 'following': [9, 10, 1]},\n        {'userId': 9, 'following': [10, 1, 2]},\n        {'userId': 10, 'following': [1, 2, 3]}\n    ]\n}\n\nexport function riceZoneApp( state = initialState, action) {\n    switch (action.type) {\n        // update the rice zone state\n        case USERS_LOADED:\n            let date = new Date();\n            return {\n                ...state,\n                userNum: action.payload.length,\n                userList: [...action.payload],\n                timeStamp: date.toLocaleString()\n            }\n        case USERS_ADDED:\n            let userList = [...state.userList];\n            let payload = action.payload;\n            let num = state.userNum;\n            num++;\n            payload['id'] = state.userNum + 1;\n            userList.push(payload);\n            return {\n                ...state,\n                userList: userList,\n                userNum: num,\n                currentUserID: num\n            }\n        case VALIDATE_USERS:\n            let logIn = action.payload;\n            let result = false;\n            let userID;\n            let userName;\n            state.userList.forEach(user => {\n                if (user.username === logIn.username) {\n                    if (user.password1) {\n                        if (user.password1 == logIn.password) {\n                            result = true;\n                            userID = user.id; \n                            userName = user.username;\n                        }\n                    } else {\n                        if (user.address.street == logIn.password) {\n                            result = true;\n                            userID = user.id; \n                            userName = user.username;\n                        }\n                    }\n                    \n                }\n            });\n            return {\n                ...state,\n                usersValidated: result,\n                currentUserID: userID,\n                currentUser: userName\n            }\n        case RESET_VALIDATE:\n            return {\n                ...state,\n                usersValidated: false\n            }       \n        case POSTS_LOADED:\n            return {\n                ...state,\n                postList: [...action.payload],\n                postNum: action.payload.length\n            }  \n        case GET_POSTS:\n            let posts = [...state.postList];\n            let currentPosts = [];\n            posts.forEach(post => {\n                if (post.userId === action.payload) {\n                    currentPosts.push(post);\n                }\n            });\n            return {\n                ...state,\n                currentPost: [...currentPosts],\n                displayPost: [...currentPosts]\n            }\n        case FITER_POSTS:\n            let filterPosts = [...state.currentPost];\n            let query = action.payload;\n            let displayPosts = [];\n            if (query === '') {\n                displayPosts = filterPosts;\n            } else {\n                filterPosts.forEach(post => {\n                    if (post.title.toLowerCase().includes(query.toLowerCase()) || post.body.toLowerCase().includes(query.toLowerCase())) {\n                        displayPosts.push(post);\n                    }\n                })  \n            }\n            return {\n                ...state,\n                displayPost: displayPosts\n            }\n        case ADD_POSTS:\n            let originalPosts = [...state.currentPost];\n            let postToBeAdd = action.payload;\n            let currentPostNum = state.postNum;\n            currentPostNum++;\n            postToBeAdd['id'] = currentPostNum;\n            originalPosts.unshift(postToBeAdd);\n            return {\n                ...state,\n                postNum: currentPostNum,\n                currentPost: originalPosts,\n                displayPost: originalPosts\n            }  \n        case FETCH_FOLLOWERS:\n            let followerData = [...state.followerReference];\n            let followerName = [];\n            followerData.forEach(user => {\n                if (user.userId === action.payload) {\n                    followerName = user.following.map((post, index) => {\n                        let username = '';\n                        state.userList.forEach(user => {\n                            if (user.id === post) {\n                                username = user.username;\n                            }\n                        })\n                        return username;\n                    })\n                }\n            });\n            return {\n                ...state,\n                followerList: [...followerName]\n            } \n        case REMOVE_FOLLOWERS:\n            let currentFollower = [...state.followerList]\n            let filteredFollower = currentFollower.filter((follower) => {\n                return follower !== action.payload.username;\n            });\n            return {\n                ...state,\n                followerList: [...filteredFollower]\n            }  \n        case ADD_FOLLOWERS:\n             let currentFollowerList = [...state.followerList]\n             currentFollowerList.push(action.payload.follower);\n             console.log(currentFollowerList);\n             return {\n                ...state,\n                followerList: [...currentFollowerList]\n             }   \n        case UPDATE_HEADLINE:\n            return {\n                ...state,\n                userHeadline: action.payload.headline\n            }            \n        default:\n            return state;\n    }\n}\n\nexport async function fetchUsers(dispatch, getState) {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const data = await response.json();\n    dispatch(loadUsers(data));\n}\n\nexport async function fetchPosts(dispatch, getState) {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await response.json();\n    dispatch(loadPosts(data));\n}\n\nexport default {riceZoneApp} ;"],"mappings":"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"},"metadata":{},"sourceType":"module"}