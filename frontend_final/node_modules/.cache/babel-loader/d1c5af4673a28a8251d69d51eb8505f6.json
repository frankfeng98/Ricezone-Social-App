{"ast":null,"code":"import * as Yup from 'yup';\nexport const validation_profile = Yup.object({\n  username: Yup.string().test(\"Account-validation\", \"Account can only contain number and letters and may not start with number\", function (value) {\n    if (/^\\d/.test(value)) {\n      return false;\n    }\n    //make sure only letters and nums can be accepted and that at least one letter is required\n    if (/^(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/.test(value)) {\n      return true;\n    } else {\n      return false;\n    }\n  }),\n  email: Yup.string().email('Invalid email address'),\n  phone: Yup.string().matches(/[0-9]{3}-[0-9]{3}-[0-9]{4}/, \"Phone number is format 000-000-0000\"),\n  zipcode: Yup.string().matches(/^\\d{5}$/, \"Zipcode must be 5 digit\"),\n  password1: Yup.string(),\n  password2: Yup.string().oneOf([Yup.ref('password1'), null], 'Passwords must match')\n});","map":{"version":3,"names":["Yup","validation_profile","object","username","string","test","value","email","phone","matches","zipcode","password1","password2","oneOf","ref"],"sources":["/Users/frankfeng/Desktop/Academic/Rice/COMP531/hw5-frankfeng98/ricezone/src/components/ProfilePage/profile_validation.js"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const validation_profile = Yup.object({\n    username: Yup.string()\n      .test(\n        \"Account-validation\",\n        \"Account can only contain number and letters and may not start with number\",\n        function (value) {\n            if (/^\\d/.test(value)){\n                return false;\n            }\n            //make sure only letters and nums can be accepted and that at least one letter is required\n            if (/^(?=.*?[a-zA-Z])[a-zA-Z\\d]+$/.test(value)){\n                return true;\n            } else {\n                return false;\n            }\n        }\n      ),\n    email: Yup.string().email('Invalid email address'),\n    phone: Yup.string().matches(/[0-9]{3}-[0-9]{3}-[0-9]{4}/, \"Phone number is format 000-000-0000\"),\n    zipcode: Yup.string().matches(/^\\d{5}$/, \"Zipcode must be 5 digit\"),\n    password1: Yup.string(),\n    password2: Yup.string()\n     .oneOf([Yup.ref('password1'), null], 'Passwords must match')\n  })"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,kBAAkB,GAAGD,GAAG,CAACE,MAAM,CAAC;EACzCC,QAAQ,EAAEH,GAAG,CAACI,MAAM,EAAE,CACnBC,IAAI,CACH,oBAAoB,EACpB,2EAA2E,EAC3E,UAAUC,KAAK,EAAE;IACb,IAAI,KAAK,CAACD,IAAI,CAACC,KAAK,CAAC,EAAC;MAClB,OAAO,KAAK;IAChB;IACA;IACA,IAAI,8BAA8B,CAACD,IAAI,CAACC,KAAK,CAAC,EAAC;MAC3C,OAAO,IAAI;IACf,CAAC,MAAM;MACH,OAAO,KAAK;IAChB;EACJ,CAAC,CACF;EACHC,KAAK,EAAEP,GAAG,CAACI,MAAM,EAAE,CAACG,KAAK,CAAC,uBAAuB,CAAC;EAClDC,KAAK,EAAER,GAAG,CAACI,MAAM,EAAE,CAACK,OAAO,CAAC,4BAA4B,EAAE,qCAAqC,CAAC;EAChGC,OAAO,EAAEV,GAAG,CAACI,MAAM,EAAE,CAACK,OAAO,CAAC,SAAS,EAAE,yBAAyB,CAAC;EACnEE,SAAS,EAAEX,GAAG,CAACI,MAAM,EAAE;EACvBQ,SAAS,EAAEZ,GAAG,CAACI,MAAM,EAAE,CACrBS,KAAK,CAAC,CAACb,GAAG,CAACc,GAAG,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,EAAE,sBAAsB;AAC9D,CAAC,CAAC"},"metadata":{},"sourceType":"module"}